{
  "_from": "server",
  "_id": "server@1.0.30",
  "_inBundle": false,
  "_integrity": "sha512-MynrapKX/W6znxUaS2hlpNQs5i+4R9RTJDnFdaSqLOwrVMtNvKmBWVacBz50A7NhNT7Sue8MU44BL7W0vsHqBg==",
  "_location": "/server",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "server",
    "fetchSpec": "latest",
    "name": "server",
    "raw": "server",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/server/-/server-1.0.30.tgz",
  "_shasum": "4fe1b19b738fec7ed0c618c66c5462a26aa89757",
  "_spec": "server",
  "_where": "C:\\Users\\benlu\\iCloudDrive\\School\\Multifarious Systems 1\\Final",
  "author": {
    "email": "public@francisco.io",
    "name": "Francisco Presencia",
    "url": "https://francisco.io/"
  },
  "bugs": {
    "url": "https://github.com/franciscop/server/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "body-parser": "^1.15.2",
    "compression": "^1.6.2",
    "connect-redis": "^3.3.0",
    "cookie-parser": "^1.4.3",
    "csurf": "^1.9.0",
    "dotenv": "^8.2.0",
    "express": "^4.14.0",
    "express-data-parser": "^1.2.0",
    "express-session": "^1.14.2",
    "extend": "^3.0.0",
    "hbs": "^4.1.0",
    "helmet": "^3.9.0",
    "loadware": "^2.0.0",
    "log": "^1.4.0",
    "method-override": "^3.0.0",
    "mz": "^2.6.0",
    "path-to-regexp": "^6.1.0",
    "pug": "^3.0.0",
    "response-time": "^2.3.2",
    "serve-favicon": "^2.3.2",
    "serve-index": "^1.8.0",
    "socket.io": "^2.0.3"
  },
  "deprecated": false,
  "description": "A modern and powerful server for Node.js",
  "devDependencies": {
    "eslint": "^4.7.2",
    "eslint-plugin-jasmine": "^2.2.0",
    "grunt": "^1.0.1",
    "grunt-bytesize": "^0.2.0",
    "grunt-contrib-connect": "^1.0.2",
    "grunt-contrib-jshint": "^1.1.0",
    "grunt-contrib-pug": "^1.0.0",
    "grunt-contrib-watch": "^1.0.0",
    "grunt-sass": "^3.1.0",
    "jest": "^25.0.0",
    "jstransformer-marked": "^1.0.2",
    "node-sass": "^4.13.1",
    "picnic": "^6.4.0",
    "request-promises": "^1.0.1",
    "supertest": "^3.0.0"
  },
  "directories": {
    "Code": "./src",
    "Documentation": "./docs/documentation",
    "Examples": "./examples",
    "Plugins": "./plugins"
  },
  "engineStrict": true,
  "engines": {
    "node": ">=10.0.0"
  },
  "funding": "https://www.paypal.me/franciscopresencia/19",
  "homepage": "https://serverjs.io/",
  "jest": {
    "transformIgnorePatterns": [
      "/node_modules/"
    ]
  },
  "keywords": [
    "async",
    "http",
    "node.js",
    "server",
    "socket",
    "websocket"
  ],
  "license": "MIT",
  "main": "server.js",
  "name": "server",
  "optionalDependencies": {},
  "readme": "# **server.js** for Node.js\n\n[![Subscribe](https://img.shields.io/badge/%20subscribe%20-%20mailchimp%20-blue.svg )](http://eepurl.com/cGRggH)\n[![Downloads](https://img.shields.io/npm/dm/server.svg)](https://npm-stat.com/charts.html?package=server)\n[![Status](https://github.com/franciscop/server/workflows/tests/badge.svg)](https://github.com/franciscop/server/actions) [![Dependencies status](https://david-dm.org/franciscop/server/status.svg)](https://david-dm.org/franciscop/server)\n\nPowerful server for Node.js that just works so **you can focus on your awesome project**:\n\n```js\n// Include it and extract some methods for convenience\nconst server = require('server');\nconst { get, post } = server.router;\n\n// Launch server with options and a couple of routes\nserver({ port: 8080 }, [\n  get('/', ctx => 'Hello world'),\n  post('/', ctx => {\n    console.log(ctx.data);\n    return 'ok';\n  })\n]);\n```\n\n<blockquote class=\"external\">\n  <p>Simplicity is a great virtue but it requires hard work to achieve it and education to appreciate it. And to make matters worse: complexity sells better.</p>\n  <cite>― Edsger W. Dijkstra</cite>\n</blockquote>\n\n\n## Getting started\n\nThere's a [whole tutorial on getting started for beginners](https://serverjs.io/tutorials/getting-started/) but the quick version is to first install `server` as a dependency:\n\n```bash\nnpm install server\n```\n\n> Server requires **Node.js 7.6.0** or newer. **Node.js 8.x.y** LTS is recommended.\n\nThen you can create a file called `index.js` with this code:\n\n```js\n// Include the server in your file\nconst server = require('server');\nconst { get, post } = server.router;\n\n// Handle requests to the url \"/\" ( http://localhost:3000/ )\nserver([\n  get('/', ctx => 'Hello world!')\n]);\n```\n\nExecute this in the terminal to get the server started:\n\n```bash\nnode .\n```\n\nAnd finally, open your browser on [localhost:3000](http://localhost:3000/) and you should see 'Hello world!' on your browser.\n\n\n\n## Documentation\n\nThe library is documented here:\n\n<strong><a class=\"button\" href=\"https://serverjs.io/documentation/\">Full Documentation</a></strong>\n\n> [**Subscribe here**](http://eepurl.com/cGRggH) to receive tutorials when released. Tutorials are *good for learning* while the documentation is good for reference/quick use *once you know the basics*.\n\nYou can also download the repository and try the examples by browsing to them and `node .` inside each of them in `/examples`.\n\n\n\n## Use cases\n\nThe package `server` is great for many situations. Let's see some of them:\n\n\n### Small to medium projects\n\nEverything works out of the box, you get great support for most features and you can easily tap into Express' middleware ecosystem. What's not to love?\n\nSome of the included features: body and file parsers, cookies, sessions, websockets, Redis, gzip, favicon, csrf, SSL, etc. They just work so you will save a headache or two and can focus on your actual project. Get a simple form going:\n\n```js\nconst server = require('server');\nconst { get, post } = server.router;\nconst { render, redirect } = server.reply;\n\nserver(\n  get('/', () => render('index.pug')),\n  post('/', ctx => {\n    console.log(ctx.data);\n    return redirect('/');\n  })\n);\n```\n\n\n\n### API design\n\nFrom the flexibility and expressivity of the bundle, designing APIs is a breeze:\n\n```js\n// books/router.js\nconst { get, post, put, del } = require('server/router');\nconst ctrl = require('./controller');\n\nmodule.exports = [\n  get('/book', ctrl.list),\n  get('/book/:id', ctrl.item),\n  post('/book', ctrl.create),\n  put('/book/:id', ctrl.update),\n  del('/book/:id', ctrl.delete)\n];\n```\n\n\n\n### Real time\n\nWebsockets were never this easy to use! With socket.io on the front-end, you can simply do this in the back-end to handle those events:\n\n```js\n// chat/router.js\nconst { socket } = require('server/router');\nconst ctrl = require('./controller');\n\nmodule.exports = [\n  socket('connect', ctrl.join),\n  socket('message', ctrl.message),\n  socket('disconnect', ctrl.leave)\n];\n```\n\n\n\n## Author & support\n\nThis package was created by [Francisco Presencia](http://francisco.io/) but hopefully developed and maintained by many others. See the [the list of contributors here](https://github.com/franciscop/server/graphs/contributors).\n\nI love using my work and I'm available for contractor work. Freelancing helps maintain `server` and [my other open source projects](https://github.com/franciscop/) up to date! I am also on [Codementor](https://www.codementor.io/franciscop) so if you want to learn more Javascript/Node.js/etc contact me there.\n\nYou can also [sponsor the project](https://serverjs.io/sponsor), get your logo in here and some other perks with tons of ♥\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/franciscop/server.git"
  },
  "scripts": {
    "build": "grunt",
    "dev": "grunt watch",
    "kill": "kill $(lsof -t -i:$PORT) && echo '> KILLED!' || echo '> The port was already dead'",
    "kill-comment": "Kill a process running in a specific port: PORT=3000 npm run kill",
    "pretest": "cp .env.demo .env",
    "start": "node .",
    "test": "jest --coverage --forceExit"
  },
  "version": "1.0.30"
}
